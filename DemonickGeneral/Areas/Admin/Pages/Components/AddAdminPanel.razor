@inject Data.Repository.ICategoryRepository repository;

<div class="row text-center border border-dark panel-header">
    <div class="col">
        <h2>Add Panel</h2>
    </div>
</div>

<div class="row justify-content-center text-center border border-dark">
    <div class="col-auto">
        <div class="edit-card-container">
            <div class="edit-card-header text-center">
                <h5>Add Category</h5>
            </div>
            <div class="edit-card-body">
                <a @onclick='(() => AddWindow("category"))'><img src="./bootstrap-icons-1.0.0-alpha5/node-plus-fill.svg" alt="" width="190" height="190" title="Add Category"></a>
            </div>
        </div>
    </div>
    <div class="col-auto">
        <div class="edit-card-container">
            <div class="edit-card-header text-center">
                <h5>Add Course</h5>
            </div>
            <div class="edit-card-body">
                <a href="#"><img src="./bootstrap-icons-1.0.0-alpha5/folder-plus.svg" alt="" width="190" height="190" title="Add Course"></a>
            </div>
        </div>
    </div>
    <div class="col-auto">
        <div class="edit-card-container">
            <div class="edit-card-header text-center">
                <h5>Add Video</h5>
            </div>
            <div class="edit-card-body">
                <a href="#"><img src="./bootstrap-icons-1.0.0-alpha5/file-earmark-plus-fill.svg" alt="" width="190" height="190" title="Add Video"></a>
            </div>
        </div>
    </div>
</div>

@if (showEditWindow)
{
    <div class="row justify-content-center text-center border border-dark" style="background-color: #3a064742">
        <div class="col-12">
            <h3 class="text-center py-3">@editTitle</h3>

            @if (result != null && result.Name != null)
            {
                <div class="col-12">
                    <div class="alert alert-success">Category <span class="font-weight-bold text-danger">@result.Name</span> added successful!</div>
                    @{
                        category.Name = null;
                        result = null;
                    }
                </div>
             }
             else if (result != null && result.Name == null)
             {
                <div class="col-12">
                    <div class="alert alert-danger">Category name is busy!</div>
                    @{result = null;}
                </div>
             }

            <div class="col">
                <EditForm Model="category" OnValidSubmit="AddNewCategory">
                    <DataAnnotationsValidator />
                    <div class="row justify-content-center my-4">
                        <div class="col-3">
                            <label class="col-form-label">Category name: </label>
                        </div>
                        <div class="col-6">
                            <InputText class="form-control" @bind-Value="category.Name" />
                            <ValidationMessage For="@(() => category.Name)" />
                        </div>
                        <div class="col-3">
                            <button type="submit" class="btn btn-success">Add category</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {

    // Variables
    private bool showEditWindow;
    private string editTitle;
    private Category result;

    // Models
    Category category = new Category();

    // Methods
    private void AddWindow(string cklickedName)
    {
        if (!showEditWindow && cklickedName.Contains("category"))
        {
            showEditWindow = true;
            editTitle = "Add new category";
        }
        else
            showEditWindow = false;
    }

    private void AddNewCategory()
    {
        result = repository.AddCategory(category);
    }

}
